# based https://github.com/wozozo/profiles/blob/master/functions

get_arch() {
    local arch=`uname`
    if [ $(uname|sed 's/\(.*\)_.*/\1/') = 'CYGWIN' ]; then
        result='cygwin'
    elif [ "${arch}" = 'Linux' ]; then
        result='linux'
    elif [ "${arch}" = 'Darwin' ]; then
        result='darwin'
    elif [ "${arch}" = 'FreeBSD' ]; then
        result=-'freebsd'
    fi
}

get_hash_id() {
    result=$($1|sum|awk '{print $1}')
}

get_color_index() {
    # There are 7 colors and black then use them cyclic.
    result=$(($1 % 7 + 1))
}

get_prompt_color_indexes() {
    get_hash_id "whoami"; get_color_index $result
    local user=$result
    get_hash_id "hostname"; get_color_index $result
    local host=$result
    get_color_index $(($SHLVL + 2))
    local shlvl=$result
    result=($user $host $shlvl)
}

init_basic_environment_variables() {
    # editor
    export EDITOR=vim
    # default language
    export LANG=ja_JP.UTF-8
    # profile bin path
    export PATH="$PATH:$profiles/bin"
}

init_aliases() {
    get_arch
    local arch=$result

    # colors ls
    if [ "$arch" = "darwin" -o "$arch" = "freebsd" ]; then
        alias ls='ls -hG'
    else
        alias ls='ls -p -h --show-control-chars --color=auto'
    fi

    # ls
    alias ls-al="ls -al"
    alias ll="ls -al"

    # subversion related
    alias svndiff="svn diff -x --ignore-all-space -x --ignore-eol-style | vi -v -"
    alias svndiffd="svn diff -x --ignore-all-space -x --ignore-eol-style -r \"{\`date -v-1d +%Y%m%d\`}\" | vi -v -"
    alias svnst="svn st | grep -v '^[X?]'"


    # grep related
    # if which ack 2>&1 >/dev/null; then
    #     alias gr="ack"
    # else
    #     if grep --help 2>&1|grep -e '--exclude-dir' 2>&1 >/dev/null; then
    #         alias gr="grep -r -E -n --color=always --exclude='*.svn*' --exclude='*.log*' --exclude='*tmp*' --exclude-dir='**/tmp' --exclude-dir='CVS' --exclude-dir='.svn' --exclude-dir='.git' . -e "
    #     else
    #         alias gr="grep -r -E -n --color=always --exclude='*.svn*' --exclude='*.log*' --exclude='*tmp*' . -e "
    #     fi
    # fi
    alias ge="grepedit"

    # git related
    alias d="git diff"
    alias s="git status"
    alias a="git add"
    alias lps="git log -p --stat --reverse"

    alias now="date +%Y%m%d%H%M%S"
    alias wget="wget -U Mozilla --no-check-certificate"
    alias fn="find . -not -ipath '*/tmp/*' -not -ipath '*/.*/*' -name "

    # Terminal.app related
    alias t="term -t"

    # if we have vim, vi is vim
    if type 'vim' > /dev/null 2>&1; then
        alias vi='vim'
    fi

    alias where="command -v"
    alias j="jobs -l"
    alias la="ls -a"
    alias lf="ls -F"
    alias ll="ls -l"
    alias l="ll"
    alias lla="ls -laF"
    alias ls="ls"
    alias sl="ll"
    alias du="du -h"
    alias df="df -h"
    alias su="su -l"

    # git, hg colordiff
    # alias hg="nocorrect hg"
    # alias git="nocorrect git"
    alias hgcdiff="hg diff|colordiff|less -r"
    alias gitcdiff="git diff|colordiff|less -r"
    alias gg="git log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'"

    # run simple server
    alias pyhttpd='python -m SimpleHTTPServer'

    # clear
    alias c="clear"

    # count
    alias count="cat **/* | wc"

    # MacPorts
    alias pu="sudo port -d selfupdate; sudo port -d sync"
    alias portuninstall="sudo port -f uninstall inactive"

    alias t='tree -C'

    # user agent
    alias curlh="curl -s -L -D - -o /dev/null $@"
    alias wgeth="wget -S -q -O /dev/null $@"
    alias lwph="lwp-request -deS $@"
}

init_additionl_configration() {
    get_arch
    local arch=$result

    for i in "$profiles" "$profiles/$arch"; do
        # Additional PATH enviroment variables
        for f in "$i"/*.path; do
            if [ -f "$f" ]; then
                p=$(sed -e ':a' -e '$!N' -e '$!b a' -e 's/\n/:/g' < "$f")
                export PATH="${p}:${PATH}"
            fi
        done

        # Additional initialize scripts
        for f in "$i"/$1 "$i"/*.sh; do
            if [ -f "$f" ]; then
                source "$f"
            fi
        done
    done
}

init_rvm() {
    if [ -s "$HOME/.rvm/scripts/rvm" ]; then
        source "$HOME/.rvm/scripts/rvm"
        rvm default 1>/dev/null 2>&1
        if [ -f ".rvmrc" ]; then
            source ".rvmrc"
        fi
        return 0
    fi
    return 1
}

# clear Terminal.app title
precmd() {
    echo -ne "\033]0;\007"
}

# get the name of the branch we are on
git_prompt_info() {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo "$ZSH_THEME_GIT_PROMPT_PREFIX${ref#refs/heads/}$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_SUFFIX"
}

parse_git_dirty() {
  if [[ -n $(git status -s 2> /dev/null) ]]; then
    echo "$ZSH_THEME_GIT_PROMPT_DIRTY"
  else
    echo "$ZSH_THEME_GIT_PROMPT_CLEAN"
  fi
}

# function prompt_char {
#     git branch >/dev/null 2>/dev/null && echo '±' && return
#     hg root >/dev/null 2>/dev/null && echo '☿' && return
#     echo '○'
# }

virtualenv_info() {
    [ $VIRTUAL_ENV ] && echo '('`basename $VIRTUAL_ENV`') '
}

ssh-reagent () {
    for agent in /tmp/ssh-*/agent.*; do
        export SSH_AUTH_SOCK=$agent
        if ssh-add -l 2>&1 > /dev/null; then
            echo Found working SSH Agent:
            ssh-add -l
            return
        fi
    done
    echo Cannot find ssh agent - maybe you should reconnect and forward it?
}
